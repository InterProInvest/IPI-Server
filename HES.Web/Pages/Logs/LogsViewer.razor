@page "/Logs"
@layout EmptyLayout
@attribute [Authorize(Roles = ApplicationRoles.AdminRole)]

<style>
    html {
        font-size: 14px;
    }

    @@media (min-width: 768px) {
        html {
            font-size: 16px;
        }
    }

    .box-shadow {
        box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);
    }

    html {
        position: relative;
        min-height: 100%;
    }

    body {
        background: #FFF;
    }

    .table thead th {
        vertical-align: bottom;
        border-top: 0;
        border-bottom: 0;
    }

    td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    tr {
        cursor: pointer;
    }

    .has-search-right {
        position: relative;
    }

        .has-search-right .form-control {
            padding-right: 2.375rem;
        }

        .has-search-right .form-control-feedback {
            position: absolute;
            top: 0;
            right: 0;
            z-index: 2;
            display: block;
            width: 2.375rem;
            height: 2.375rem;
            line-height: 2.375rem;
            text-align: center;
            color: #aaa;
        }

            .has-search-right .form-control-feedback .img-size {
                width: 20px;
            }

    .app {
        position: relative;
        display: flex;
        flex-direction: column;
    }

    .main {
        flex: 1;
    }

    .content-header {
        height: 57px;
    }

    .content-body {
        padding: 15px;
        overflow-y: auto;
        height: calc(100vh - 57px);
    }

    @@media (min-width: 768px) {
        .app {
            flex-direction: row;
        }

        .sidebar {
            min-width: 260px;
            max-width: 260px;
            height: 100vh;
            overflow-x: hidden;
            overflow-y: auto;
            position: sticky;
            top: 0;
            padding: 10px;
            border-right: 1px solid #dee2e6;
        }
    }

    .loading {
        position: fixed;
        top: 0;
        left: 260px;
        z-index: 1051;
        width: calc(100vw - 250px);
        height: 100%;
        overflow: hidden;
        outline: 0;
        background: #FFF;
    }

    @@media screen and (max-width: 768px) {
        .loading {
            left: 68px;
            width: calc(100vw - 68px);
        }
    }
</style>

@if (isBusy)
{
    <div class="loading d-flex justify-content-center align-items-center">
        <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only"></span>
        </div>
    </div>
}
<div class="app">
    <div class="sidebar">
        <div class="list-group">
            @foreach (string logFile in LogsFiles)
            {
                <button class="list-group-item list-group-item-action @(logFile == Logs?.First().Name ? "active" : null)" @onclick="()=> ShowLogAsync(logFile)">@logFile</button>
            }
        </div>
    </div>
    <div class="main">
        @if (Logs == null)
        {
            <div class="d-flex justify-content-center align-items-center vh-100">
                <h5 class="px-3 m-0">Select log file</h5>
            </div>
        }
        else
        {
            <div class="content-header">
                <nav class="navbar navbar-light bg-light border-bottom shadow-sm">
                    <div class="d-flex align-items-center">
                        <button id="download_btn" class="btn btn-secondary mr-2" title="Download file" @onclick="DownloadFile">
                            <img src="/svg/icon-download.svg" />
                        </button>
                        @*<button id="delete_btn" class="btn btn-secondary  mr-2" title="Delete file">
                                <img src="/svg/icon-delete-white.svg" />
                            </button>*@
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="localTime" @bind="LocalTime">
                            <label class="custom-control-label" for="localTime">Local time</label>
                        </div>
                    </div>
                    <div>
                        <span class="badge badge-success">INFO</span> <span id="infoLabel" class="badge badge-light">@Logs.Select(s => s.Level).Where(x => x == "INFO").Count()</span>
                        <span class="badge badge-info">DEBUG</span> <span id="debugLabel" class="badge badge-light">@Logs.Select(s => s.Level).Where(x => x == "DEBUG").Count()</span>
                        <span class="badge badge-warning">WARN</span> <span id="warnLabel" class="badge badge-light">@Logs.Select(s => s.Level).Where(x => x == "WARN").Count()</span>
                        <span class="badge badge-danger">ERROR</span> <span id="errorLabel" class="badge badge-light">@Logs.Select(s => s.Level).Where(x => x == "ERROR").Count()</span>
                        <span class="badge badge-dark">FATAL</span> <span id="fatalLabel" class="badge badge-light">@Logs.Select(s => s.Level).Where(x => x == "FATAL").Count()</span>
                    </div>
                    <div class="form-group has-search-right m-0">
                        <div class="form-control-feedback">
                            <img class="img-size" src="/svg/icon-search.svg" />
                        </div>
                        <input id="searchbox" type="text" class="form-control" placeholder="Search" @oninput="@((e)=> { searchText = (string)e.Value; })">
                    </div>
                </nav>
            </div>
            <div class="content-body">
                <table class="table table-hover border rounded m-0 w-100" style="table-layout:fixed; margin:0px !important">
                    <thead>
                        <tr>
                            <th style="width:212px">
                                Date
                            </th>
                            <th style="width:100px">
                                Level
                            </th>
                            <th>
                                Logger
                            </th>
                            <th>
                                Message
                            </th>
                            <th style="width:100px">
                                Method
                            </th>
                            <th>
                                Url
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Logs.Where(x => x.Date.ToString().Contains(searchText, StringComparison.OrdinalIgnoreCase)
                                          || x.Level.Contains(searchText, StringComparison.OrdinalIgnoreCase)
                                          || x.Logger.Contains(searchText, StringComparison.OrdinalIgnoreCase)
                                          || x.Message.Contains(searchText, StringComparison.OrdinalIgnoreCase)
                                          || x.Method.Contains(searchText, StringComparison.OrdinalIgnoreCase)
                                          || x.Url.Contains(searchText, StringComparison.OrdinalIgnoreCase)))
                        {
                            <tr data-toggle="modal" data-target="#modalView" @onclick="@(() => { LogModel = item; })">
                                <td>
                                    @if (LocalTime)
                                    {
                                        @DateTime.Parse(item.Date).ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss.ffff")
                                    }
                                    else
                                    {
                                        @item.Date
                                    }
                                </td>
                                <td>
                                    @{
                                        switch (item.Level)
                                        {
                                            case "INFO":
                                                <span class="badge badge-success">@item.Level</span>
                                                break;
                                            case "DEBUG":
                                                <span class="badge badge-info">@item.Level</span>
                                                break;
                                            case "WARN":
                                                <span class="badge badge-warning">@item.Level</span>
                                                break;
                                            case "ERROR":
                                                <span class="badge badge-danger">@item.Level</span>
                                                break;
                                            case "FATAL":
                                                <span class="badge badge-dark">@item.Level</span>
                                                break;
                                        }
                                    }
                                </td>
                                <td>
                                    @item.Logger
                                </td>
                                <td>
                                    @item.Message
                                </td>
                                <td>
                                    @item.Method
                                </td>
                                <td>
                                    @item.Url
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<div class="modal" id="modalView" tabindex="-1" role="dialog" aria-labelledby="modalDialogTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-navyblue">Log</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="modalBody" class="modal-body">
                <h6>Date</h6>
                <p id="date">@LogModel?.Date</p>
                <h6>Level</h6>
                <p id="level">@LogModel?.Level</p>
                <h6>Logger</h6>
                <p id="logger">@LogModel?.Logger</p>
                <h6>Message</h6>
                <p id="message">@LogModel?.Message</p>
                <h6>Method</h6>
                <p id="method">@LogModel?.Method</p>
                <h6>Url</h6>
                <p id="url">@LogModel?.Url</p>
            </div>
        </div>
    </div>
</div>