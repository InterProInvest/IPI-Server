@if (Filter == null)
{
    <LoadingText />
}
else
{
    <EditForm Model="Filter" OnValidSubmit="FilteredAsync">
        <div class="row">
            <div class="col-sm-6 col-md-4 col-lg-3 col-xl-2 form-group">
                <label class="text-gray">Name</label>
                <InputText class="form-control" @bind-Value="Filter.Name" />
            </div>
            <div class="col-sm-6 col-md-4 col-lg-3 col-xl-2 form-group">
                <label class="mb-0 text-gray">Created At From</label>
                <InputDate class="form-control" @bind-Value="Filter.CreatedAtFrom" />
            </div>
            <div class="col-sm-6 col-md-4 col-lg-3 col-xl-2 form-group">
                <label class="mb-0 text-gray">Created At To</label>
                <InputDate class="form-control" @bind-Value="Filter.CreateddAtTo" />
            </div>
            <div class="col-sm-6 col-md-4 col-lg-3 col-xl-2 form-group">
                <label class="mb-0 text-gray">Updated At From</label>
                <InputDate class="form-control" @bind-Value="Filter.UpdatedAtFrom" />
            </div>
            <div class="col-sm-6 col-md-4 col-lg-3 col-xl-2 form-group">
                <label class="mb-0 text-gray">Updated At To</label>
                <InputDate class="form-control" @bind-Value="Filter.UpdatedAtTo" />
            </div>
            <div class="col-sm-6 col-md-4 col-lg-3 col-xl-2 form-group">
                <label class="text-gray">Hardware Vaults Count</label>
                <InputNumber class="form-control" @bind-Value="Filter.HardwareVaultsCount" />
            </div>
            <div class="col align-self-end text-right form-group">
                <ButtonSpinner Text="Clear" Class="btn btn-secondary" Callback="ClearAsync" />
                <ButtonSpinner @ref="ButtonSpinner" Submit="true" Text="Filter" Class="btn btn-primary" />
            </div>
        </div>
    </EditForm>
}