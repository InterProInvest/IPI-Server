@if (LicensingSettings == null)
{
    <LoadingText />
}
else
{
<EditForm Model="@LicensingSettings" OnValidSubmit="@UpdateLicensingSettingsAsync">
    <DataAnnotationsValidator />
    <div class="form-group">
        <FormLabel For="@(() => LicensingSettings.ApiAddress)" class="text-gray" />
        <InputText @bind-Value="LicensingSettings.ApiAddress" class="form-control text-navyblue" />
        <ValidationMessage For="@(() => LicensingSettings.ApiAddress)" class="text-danger" />
    </div>

    <FormLabel For="@(() => LicensingSettings.ApiKey)" class="text-gray" />
    <div class="input-group form-group">
        <InputText @bind-Value="LicensingSettings.ApiKey" class="form-control text-navyblue" type="@InputType" />
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button" @onmousedown="@(() => InputType = "Text")" @onmouseup="@(() => InputType = "Password")">Show</button>
        </div>
        <ValidationMessage For="@(() => LicensingSettings.ApiKey)" class="text-danger" />
    </div>
    <div class="text-right">
        <button type="button" class="btn btn-secondary" @onclick="@(async () => await ModalDialogService.CancelAsync())">Cancel</button>
        <ButtonSpinner @ref="ButtonSpinner" Submit="true" Text="Save" Class="btn btn-primary" />
    </div>
</EditForm>
}