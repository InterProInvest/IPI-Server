@page "/Employees"
@attribute [Authorize(Roles = ApplicationRoles.AdminRole)]
@inherits OwningComponentBase

@if (Initialized)
{
    <TableAction>
        <FilterForm>
            <EmployeeFilterComponent FilterChanged="MainTableService.FilterChangedAsync" />
        </FilterForm>
        <ActionButtons>
            @*<button type="button" @onclick="ImportEmployeesFromAdAsync" class="btn btn-primary mr-1" title="Import employee from AD">
                    Import from AD
                </button>*@
            <button type="button" @onclick="SyncEmployeesWithAdAsync" class="btn btn-primary mr-1" title="Sync with AD">
                Sync with AD
            </button>
            <button type="button" @onclick="CreateEmployeeAsync" class="btn btn-primary mx-1" title="Create employee">
                Create employee
            </button>
            @if (MainTableService.SelectedEntity != null)
            {
                <button type="button" @onclick="EmployeeDetailsAsync" class="btn btn-light border mx-1" title="Employee details">
                    <img class="icon-btn" src="/svg/icon-details.svg" />
                    Details
                </button>
                @if (MainTableService.SelectedEntity.ActiveDirectoryGuid == null)
                {
                    <button type="button" @onclick="EditEmployeeAsync" class="btn btn-light border mx-1" title="Edit employee">
                        <img class="icon-btn" src="/svg/icon-edit.svg" />
                        Edit
                    </button>
                }
                <button type="button" @onclick="DeleteEmployeeAsync" class="btn btn-light border mx-1" title="Delete employee">
                    <img class="icon-btn" src="/svg/icon-delete.svg" />
                    Delete
                </button>
            }
        </ActionButtons>
        <FilterButtons>
            <TableFilter SearchTextChanged="MainTableService.SearchTextChangedAsync" />
        </FilterButtons>
    </TableAction>
    <MainTable Items="MainTableService.Entities" SelectedItem="MainTableService.SelectedEntity" SelecedItemChanged="MainTableService.SelectedItemChangedAsync" SelecedItemDblClick="EmployeeDetailsAsync" Loading="MainTableService.Loading">
        <TableHeader>
            <MainTableHeader Title="Name"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.FullName)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
            <MainTableHeader Title="Email"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.Email)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
            <MainTableHeader Title="Phone Number"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.PhoneNumber)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
            <MainTableHeader Title="Company"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.Department.Company)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
            <MainTableHeader Title="Department"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.Department)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
            <MainTableHeader Title="Position"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.Position)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
            <MainTableHeader Title="Last Seen"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.LastSeen)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
            <MainTableHeader Title="Vaults Count"
                             TitleWidth="12.5"
                             SortColumn="@nameof(Employee.VaultsCount)"
                             CurrentSortedColumn="@MainTableService.DataLoadingOptions.SortedColumn"
                             CurrentSortDirection="@MainTableService.DataLoadingOptions.SortDirection"
                             SortedColumnChanged="MainTableService.SortedColumnChangedAsync"
                             SortDirectionChanged="MainTableService.SortDirectionChangedAsync" />
        </TableHeader>
        <TableRow>
            <td>
                @context.FullName
                @if (context.ActiveDirectoryGuid != null)
                {
                    <span class="badge @(MainTableService.SelectedEntity?.Id == context.Id ? "badge-light":"badge-primary") ml-1" title="Imported from Active Directory">
                        AD
                    </span>
                }
            </td>
            <td>
                @context.Email
            </td>
            <td>
                @context.PhoneNumber
            </td>
            <td>
                @context.Department?.Company?.Name
            </td>
            <td>
                @context.Department?.Name
            </td>
            <td>
                @context.Position?.Name
            </td>
            <td>
                @if (context.LastSeen != null)
                {
                    @context.LastSeen.Value.ToLocalTime()
                }
            </td>
            <td>
                @context.VaultsCount
            </td>
        </TableRow>
    </MainTable>
    <Pagination CurrentPageChanged="MainTableService.CurrentPageChangedAsync"
                DisplayRowsChanged="MainTableService.DisplayRowsChangedAsync"
                TotalRecords="MainTableService.TotalRecords"
                CurrentPage="MainTableService.CurrentPage"
                DisplayRows="MainTableService.DataLoadingOptions.Take"
                DisplayRecords="MainTableService.Entities.Count" />
}
else if (LoadFailed)
{
    <LoadingFailed ErrorMessage="@ErrorMessage" />
}
else
{
    <LoadingPage />
}